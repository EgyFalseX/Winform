private void gridViewData_CustomDrawGroupRow(object sender, DevExpress.XtraGrid.Views.Base.RowObjectCustomDrawEventArgs e)
        {
            //GridView view = sender as GridView;
            //GridGroupRowInfo info = e.Info as GridGroupRowInfo;

            //if (info.Column.FieldName == "CityEnName" || info.Column.FieldName == "CityArName")
            //{
            //    info.GroupText = info.GroupValueText + " - <color=LightSteelBlue>" + view.GetGroupSummaryText(e.RowHandle) + "</color> ";
            //}
            
        }
____________________________________________________________________________________________________________
merge into BillingDetails as Target 
                    using {0} as Source on Target.BillingDocument=Source.BillingDocument, Target.ConditionTypeId=Source.ConditionTypeId, Target.MaterialNumber=Source.MaterialNumber
                    when matched then 
                    update set Target.BillingDocument=Source.BillingDocument,
                    Target.SoldToParty=Source.SoldToParty,
                    Target.RouteId=Source.RouteId,
                    Target.BillingDate=Source.BillingDate,
                    Target.ConditionTypeId=Source.ConditionTypeId,
                    Target.MaterialNumber=Source.MaterialNumber,
                    Target.BillTypeId=Source.BillTypeId,
                    Target.ReferenceDocumentN=Source.ReferenceDocumentN,
                    Target.ActualInvoicedQuan=Source.ActualInvoicedQuan,
                    Target.ConditionValue=Source.ConditionValue,
                    Target.userin=Source.userin,
                    Target.datein=Source.datein
                    when not matched then 
                    insert (BillingDetailsId,BillingDocument,SoldToParty, RouteId, BillingDate, ConditionTypeId, MaterialNumber, BillTypeId, ReferenceDocumentN, ActualInvoicedQuan, ConditionValue, userin, datein) values 
                    (Source.BillingDetailsId,Source.BillingDocument,Source.SoldToParty, Source.RouteId, Source.BillingDate, Source.ConditionTypeId, Source.MaterialNumber, Source.BillTypeId, 
                    Source.ReferenceDocumentN, Source.ActualInvoicedQuan, Source.ConditionValue, Source.userin, Source.datein);
____________________________________________________________________________________________________________
DataTable dtExcel = new DataTable();
            dsData.RouteCustomer.Clear();
            SplashScreenManager.ShowForm(typeof(WaitWindowFrm));
            this.Invoke(new MethodInvoker(() =>
            {
                SplashScreenManager.Default.SetWaitFormDescription("Loading Excel File Informations [1/3]");
                //@@, Route, Customer, [Delivery Day]
                dtExcel = LoadXLS(ExcelFilePath, "Sheet1", "*");
                SplashScreenManager.Default.SetWaitFormDescription("Loading Routes Informations [2/3]");
                adpRoute.Fill(dsData.Routes);
                SplashScreenManager.Default.SetWaitFormDescription("Loading Customers Informations [3/3]");
                adpCustomer.Fill(dsData.Customer);
            }));
            SplashScreenManager.CloseForm();
            if (dtExcel.Rows.Count == 0)
                return;

            DateTime DTStart = DateTime.Now;
            SqlConnection con = new SqlConnection(Properties.Settings.Default.MainConnectionString);
            SqlCommand cmd = new SqlCommand("", con);
            DateTime datein = Managers.DataManager.defaultInstance.GetServerDatetime;
            int userin = UserManager.defaultInstance.UserInfo.UserID;
            SqlBulkCopy bulkCopy = new SqlBulkCopy(con);
            bulkCopy.ColumnMappings.Clear();
            bulkCopy.ColumnMappings.Add("CustomerId", "CustomerId"); bulkCopy.ColumnMappings.Add("RouteId", "RouteId");
            bulkCopy.ColumnMappings.Add("RouteCustomerStateId", "RouteCustomerStateId");
            bulkCopy.ColumnMappings.Add("userin", "userin"); bulkCopy.ColumnMappings.Add("datein", "datein");

            ProgressBarMain.Properties.Maximum = dtExcel.Rows.Count;
            ProgressBarMain.EditValue = 0;

            foreach (DataRow row in dtExcel.Rows)
            {
                ProgressBarMain.EditValue = (int)ProgressBarMain.EditValue + 1;
                lblCount.Text = string.Format("{0}/{1}", ProgressBarMain.Properties.Maximum, ProgressBarMain.EditValue);
                double DonePercent = Convert.ToDouble(ProgressBarMain.EditValue) / ProgressBarMain.Properties.Maximum;
                if (DonePercent * 100 > 1)
                {
                    double sec = DateTime.Now.Subtract(DTStart).TotalSeconds / DonePercent;
                    DateTime endTime = DateTime.Now.AddSeconds(sec);
                    TimeSpan remainTime = DateTime.Now.AddSeconds(sec).Subtract(DateTime.Now);
                    lblEstTime.Text = string.Format("[{0}] mins", Convert.ToInt32(remainTime.TotalMinutes));
                }
                Application.DoEvents();

                DataSources.dsData.RouteCustomerRow SqlRow = dsData.RouteCustomer.NewRouteCustomerRow();
                SqlRow.CustomerId = Convert.ToInt32(row["Customer"]);
                SqlRow.RouteId = GetRouteId(row["Route"].ToString(), dsData.Routes);
                SqlRow.DeliveryDay = Convert.ToInt16(row["Delivery Day"]);
                SqlRow.userin = userin; SqlRow.datein = datein;
                dsData.RouteCustomer.AddRouteCustomerRow(SqlRow);
                SqlRow.EndEdit();
            }
            con.Open();

            string tablename = string.Format("RouteCustomer{0}{1}{2}{3}{4}{5}{6}", DTStart.Year, DTStart.Month, DTStart.Day, DTStart.Hour, DTStart.Minute, DTStart.Second, DTStart.Millisecond);
            cmd.CommandText = string.Format(@"SELECT * INTO {0} FROM RouteCustomer WHERE 1 = 0;", tablename);
            Logger.InfoFormat("Creating Temp table '{0}' - {1}", tablename, cmd.ExecuteNonQuery());

            bulkCopy.DestinationTableName = tablename;
            bulkCopy.BatchSize = dsData.RouteCustomer.Count;
            bulkCopy.WriteToServer(dsData.RouteCustomer);

            cmd.CommandText = string.Format(@"merge into RouteCustomer as Target 
                    using {0} as Source on Target.CustomerId=Source.CustomerId, Target.RouteId=Source.RouteId
                    Target.DeliveryDay=Source.DeliveryDay
                    when matched then 
                    update set Target.CustomerId=Source.CustomerId, Target.RouteId=Source.RouteId,
                    Target.DeliveryDay=Source.DeliveryDay, Target.userin=Source.userin, Target.datein=Source.datein
                    when not matched then 
                    insert (CustomerId,RouteId, DeliveryDay, userin, datein) values 
                    (Source.CustomerId,Source.RouteId, Source.DeliveryDay, Source.userin, Source.datein);", tablename);
            Logger.InfoFormat("Merge Complete - {0}", cmd.ExecuteNonQuery());
            cmd.CommandText = string.Format(@"DROP TABLE {0}", tablename);
            Logger.InfoFormat("Temp Table Droped - {0}", cmd.ExecuteNonQuery());

            dtExcel.Rows.Clear();
            dsData.RouteCustomer.Clear();
            dsData.Customer.Clear();

            ProgressBarMain.EditValue = 0;
            con.Close(); con.Dispose();
_______________________________________________________________________________________________________
while (dr.Read())
                {
                    NestleMarkting.DataSources.dsSapReports.RouteCustomerReportRow row = dtXLS.NewRouteCustomerReportRow();
                    row.State = dr.GetValue(0).ToString();
                    row.Plant = dr.GetValue(1).ToString();
                    row.Route_Name_1 = dr.GetValue(2).ToString();
                    row.Route = dr.GetValue(3).ToString();
                    row.Description = dr.GetValue(4).ToString();
                    row.Customer = dr.GetValue(7).ToString();
                    row.Customer_Name_1 = dr.GetValue(8).ToString();
                    row.Street = dr.GetValue(9).ToString();
                    row.City = dr.GetValue(10).ToString();
                    row.Postal_Code = dr.GetValue(11).ToString();
                    row.Delivery_Day = dr.GetValue(15).ToString();
                    row.Next_Delivery_Day = dr.GetValue(16).ToString();
                    row.Valid_From = dr.GetValue(30).ToString();
                    row.Valid_To = dr.GetValue(31).ToString();
                    row.Date_of_Creation = dr.GetValue(32).ToString();
                    row.EndEdit();
                    dtXLS.AddRouteCustomerReportRow(row);
                }
_______________________________________________________________________________________________________
